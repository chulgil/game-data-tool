generator db {
  provider  = "prisma-client-py"
  interface = "asyncio"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model achieve_data {
  achieve_id            Int    @id
  quest_type            Int
  name                  String @db.NVarChar(50)
  group_type            Int
  step_in_group         Int
  quest_todo_id         Int
  need_cnt              Int
  quest_reward_group_id Int
  status                String @db.NVarChar(1)
}

model actor_data {
  actor_id                 Int     @id(map: "PK__actor_da__8B2447B479DFADDD")
  name                     String  @db.NVarChar(50)
  species_type             Int
  grade                    Int?
  level                    Int?
  exp_name                 String? @db.NVarChar(20)
  level_pattern_group_id   Int?
  awakening_group_id       Int?
  default_weapon           Int?
  default_armor            Int?
  default_accessory        Int?
  hp                       Int?
  attack_damage            Int?
  defense                  Int?
  ability_id_1             Int?
  ability_id_2             Int?
  ability_id_3             Int?
  food_cost                Int?
  militia_cost             Int?
  actor_job_type           Int?
  attack_target_type       Int?
  attack_first_target_type Int?
  attack_attribute_type    Int?
  defense_attribute_type   Int?
  level_data_id            Int?    @default(0, map: "DF__actor_dat__level__69FBBC1F")
  piece_item_data_id       Int?    @default(0, map: "DF__actor_dat__piece__6AEFE058")
  status                   String? @db.NVarChar(1)
  resource                 String? @default("", map: "DF__actor_dat__resou__6BE40491") @db.NVarChar(50)
  res_folder               String? @default("", map: "DF__actor_dat__res_f__6CD828CA") @db.NVarChar(50)
  ani_num                  Int?
  sex                      String? @default("", map: "DF__actor_data__sex__6EC0713C") @db.NVarChar(50)
  role_type                String? @default("", map: "DF__actor_dat__role___6FB49575") @db.NVarChar(50)
  animPrefix               String? @default("", map: "DF__actor_dat__animP__70A8B9AE") @db.NVarChar(50)
  weapon_type              Int?    @default(0, map: "DF__actor_dat__weapo__719CDDE7")
  armor_type               Int?    @default(0, map: "DF__actor_dat__armor__72910220")
  fx_hit                   Int?    @default(0, map: "DF__actor_dat__fx_hi__73852659")
  social_list_id           Int?    @default(0, map: "DF__actor_dat__socia__74794A92")
  hud_dialogue_list_id     Int?    @default(0, map: "DF__actor_dat__hud_d__756D6ECB")
  sfx_find_Target          String? @default("", map: "DF__actor_dat__sfx_f__76619304") @db.NVarChar(50)
  sfx_attack               String? @default("", map: "DF__actor_dat__sfx_a__7755B73D") @db.NVarChar(50)
  atlas_face               String? @default("", map: "DF__actor_dat__atlas__7849DB76") @db.NVarChar(50)
  face                     String? @default("", map: "DF__actor_data__face__793DFFAF") @db.NVarChar(50)
  attack_speed             Float?  @default(0, map: "DF__actor_dat__attac__7A3223E8")
  attack_delay             Float?  @default(0, map: "DF__actor_dat__attac__7B264821")
  attack_range             Float?  @default(0, map: "DF__actor_dat__attac__7C1A6C5A")
  help_attack_range        Int?    @default(0, map: "DF__actor_dat__help___7D0E9093")
  sight_range              Float?  @default(0, map: "DF__actor_dat__sight__7E02B4CC")
  sight_angle              Int?    @default(0, map: "DF__actor_dat__sight__7EF6D905")
  walk_speed               Float?  @default(0, map: "DF__actor_dat__walk___7FEAFD3E")
  run_speed                Float?  @default(0, map: "DF__actor_dat__run_s__00DF2177")
  pulse_radius             Int?    @default(0, map: "DF__actor_dat__pulse__01D345B0")
  resistant                Int?    @default(0, map: "DF__actor_dat__resis__02C769E9")
  spawn_time               Int?    @default(0, map: "DF__actor_dat__spawn__03BB8E22")
  evasion_rate             Int?    @default(0, map: "DF__actor_dat__evasi__04AFB25B")
  critical_prob            Int?    @default(0, map: "DF__actor_dat__criti__05A3D694")
  critical_damage          Int?    @default(0, map: "DF__actor_dat__criti__0697FACD")
  piercing_prob            Int?    @default(0, map: "DF__actor_dat__pierc__078C1F06")
  piercing_count           Int?    @default(0, map: "DF__actor_dat__pierc__0880433F")
  endurance                Int?    @default(0, map: "DF__actor_dat__endur__09746778")
  hit_radius               Float?  @default(0, map: "DF__actor_dat__hit_r__0A688BB1")
  hit_count                Int?    @default(0, map: "DF__actor_dat__hit_c__0B5CAFEA")
  mask_resource            String? @default("", map: "DF__actor_dat__mask___0C50D423") @db.NVarChar(50)
  disassemble_goods_type   Int?    @default(0, map: "DF__actor_dat__disas__0D44F85C")
  model_scale              Float?  @default(0, map: "DF__actor_dat__model__0E391C95")
  militia_death_prob       Float?  @default(0, map: "DF__actor_dat__milit__0F2D40CE")
}

model actor_level_data {
  actor_level_id     Int @id(map: "PK__actor_le__540DD04D32EA284B")
  group_id           Int
  level              Int @default(0, map: "DF__actor_lev__level__10216507")
  levelup_piece_cost Int
  train_time         Int
  death_prob         Int @default(0, map: "DF__actor_lev__death__11158940") @db.SmallInt
  goods_type1        Int @default(0, map: "DF__actor_lev__goods__1209AD79") @db.SmallInt
  goods_count1       Int @default(0, map: "DF__actor_lev__goods__12FDD1B2")
  goods_type2        Int @default(0, map: "DF__actor_lev__goods__13F1F5EB") @db.SmallInt
  goods_count2       Int @default(0, map: "DF__actor_lev__goods__14E61A24")
  item_data_id       Int @default(0, map: "DF__actor_lev__item___15DA3E5D")
  item_count         Int @default(0, map: "DF__actor_lev__item___16CE6296")
}

model attack_count_data {
  attack_count_id Int @id(map: "PK__attack_c__A17E537FFDE956E9")
  reduce_time     Int
}

model attack_extort_data {
  attack_extort_id  Int      @id
  shelter_id        Int
  extort_priority   Int
  item_id           Int
  extort_amount_per Int
  extort_amount_min Int
  extort_amount_max Int
  status            String   @db.NVarChar(1)
  reg_dt            DateTime
}

model attack_pre_season {
  user_no     BigInt
  season_no   Int
  nick_name   String   @db.NVarChar(50)
  trophy      Int
  attack_rank Int
  season_rank Int?     @default(0, map: "DF__attack_pr__seaso__17C286CF")
  reg_dt      DateTime
  attack_win  Int
  defense_win Int?     @default(0, map: "DF__attack_pr__defen__18B6AB08")

  @@id([season_no, user_no], map: "PK__attack_p__4101B7B914732138")
}

model attack_rank_data {
  attack_rank_id    Int    @id(map: "PK__attack_r__A8DC19D385E4F7C6")
  rank_type         Int
  pre_grade         Int
  trophy            Int
  degrade           Int
  need_food_point   Int
  bonus_wood_point  Int
  bonus_parts_point Int
  bonus_food_point  Int
  status            String @db.NVarChar(1)
}

model attack_score_data {
  attack_score_id Int    @id(map: "PK__attack_s__22BA53F813BE760B")
  win             Int
  lose            Int
  status          String @db.NVarChar(1)
}

model attack_season {
  user_no     BigInt   @id(map: "PK__attack_s__B9B1F225EBB95838")
  season_no   Int
  nick_name   String   @db.NVarChar(50)
  trophy      Int
  attack_rank Int
  season_rank Int?     @default(0, map: "DF__attack_se__seaso__19AACF41")
  reg_dt      DateTime
  wall_dt     DateTime
  attack_win  Int
  defense_win Int?     @default(0, map: "DF__attack_se__defen__1A9EF37A")
  uuid        String   @db.NVarChar(50)
}

model attack_season_data {
  attack_season_id Int      @id(map: "PK__attack_s__2DCDF7D5B054275C")
  name             String   @db.NVarChar(50)
  season_id        Int
  start_dt         DateTime
  end_dt           DateTime
  status           String   @db.NVarChar(1)
}

model awakening_data {
  awakening_id  Int    @id(map: "PK__awakenin__66C414CDE6049A17")
  group_id      Int
  level         Int
  actor_level   Int
  hp            Int
  defense       Int
  attack_damage Int
  food_cost     Int
  mat1_item_id  Int
  mat1_count    Int
  mat2_item_id  Int
  mat2_count    Int
  mat3_item_id  Int
  mat3_count    Int
  mat4_item_id  Int
  mat4_count    Int
  status        String @db.NVarChar(1)
}

model battle_mode_data {
  battle_mode_id Int      @id
  name           String   @db.NVarChar(50)
  success_type   Int
  success_value  Int
  difficulty     Int
  pattern_id     Int
  world_skill_id Int
  time           Int
  status         String   @db.NVarChar(1)
  reg_dt         DateTime
}

model bonus_attend_data {
  bonus_attend_id Int    @id(map: "PK__bonus_at__BAA9F08867658006")
  attend_type     Int
  attend_group_id Int
  day_count       Int
  reward_group_id Int
  status          String @db.NVarChar(1)
}

model bonus_attend_manage_data {
  bonus_attend_manage_id Int      @id(map: "PK__tmp_ms_x__13B0E18AD33D3F91") @default(autoincrement())
  attend_type            Int
  attend_group_id        Int
  start_dt               DateTime
  end_dt                 DateTime
  status                 String   @db.NVarChar(1)
}

model bonus_mileage_data {
  bonus_mileage_id Int    @id(map: "PK__bonus_mi__E565E03BBF596960")
  mileage          Int
  reward_group_id  Int
  status           String @db.NVarChar(1)
}

model bonus_time_data {
  bonus_time_id   Int    @id(map: "PK__bonus_ti__9295944C6318BA30")
  time_in_sec     Int
  reward_group_id Int
  status          String @db.NVarChar(1)
}

model bundle_data {
  bundle_id    Int    @id(map: "PK__bundle_d__4EEE7D55A2122693")
  type_id      Int
  product_type Int
  product_id   Int
  count        Int
  status       String @db.NVarChar(1)
}

model call_act_list_data {
  call_act_list_id Int      @id
  status           String   @db.NVarChar(1)
  reg_dt           DateTime
}

model chapter_data {
  chapter_id Int    @id(map: "PK__chapter___745EFE87EA1E081D")
  status     String @db.NVarChar(1)
}

model const_data {
  const_id  Int     @id(map: "PK__const_da__B263BF5085D8EFA3")
  name      String? @db.NVarChar(50)
  int_value Int
  status    String  @db.NVarChar(1)
}

model cure_data {
  cure_id      Int @id(map: "PK__cure_dat__8FFC0630ABFA04F1")
  device_level Int
  cure_target  Int
  value        Int
  time         Int
}

model cure_list_data {
  cure_list_id Int    @id(map: "PK__cure_lis__0AE3E82A4EAF06C3")
  name         String @db.NVarChar(50)
  cure_target  Int
  add_target1  Int
  add_time1    Int
  add_target2  Int
  add_time2    Int
  exp          Int
}

model defense_pattern_data {
  defense_pattern_id Int    @id(map: "PK__defense___0D813BADAFF0D800")
  group_id           Int
  level              Int
  limit_time         Int
  reward_id          Int
  probability        Int
  status             String @db.NVarChar(1)
}

model defense_wave_data {
  defense_wave_id    Int    @id(map: "PK__defense___E8D470F02A59C810")
  defense_pattern_id Int
  spawn_time         Int
  spawn_actor_id     Int
  spawn_count        Int
  status             String @db.NVarChar(1)
}

model device_data {
  device_id              Int    @id(map: "PK__device_d__3B085D8B68E5653F")
  name                   String @db.NVarChar(50)
  level                  Int
  type                   Int
  need_shelter_extend_id Int
  moveable               Int
  destroyable            Int
  goods_type             Int
  goods_count            Int
  goods_max_count        Int
  production_time        Int
  time                   Int
  next_device_id         Int
  need_parts_point       Int
  need_food_point        Int
  need_wood_point        Int
  status                 String @db.NVarChar(1)
  effective_value        Int
}

model device_setup_data {
  device_setup_id Int    @id(map: "PK__device_s__2631E0BCAFEB9944")
  device_type     Int
  user_level      Int
  count           Int
  status          String @db.NVarChar(1)
}

model disassemble_data {
  disassemble_id   Int    @id(map: "PK__disassem__7BB8AAEBF8F7CD30")
  equip_item_grade Int
  equip_item_set   Int
  equip_item_type  Int
  result1_item_id  Int
  result1_count    Int
  result2_item_id  Int
  result2_count    Int
  result3_item_id  Int
  result3_count    Int
  result4_item_id  Int
  result4_count    Int
  status           String @db.NVarChar(1)
}

model disaster_pattern_data {
  disaster_pattern_id Int    @id(map: "PK__disaster__337B5B5C2436FF6F")
  stage_id            Int
  pattern_id          Int
  type                Int
  data_id             Int
  status              String @db.NVarChar(1)
}

model disaster_reward_data {
  disaster_reward_id Int    @id(map: "PK__disaster__B574CFDC20E24C48")
  stage_id           Int
  pattern_id         Int
  gold_time          Int
  gold_item_id       Int
  gold_item_count    Int
  silver_time        Int
  silver_item_id     Int
  silver_item_count  Int
  bronze_time        Int
  bronze_item_id     Int
  bronze_item_count  Int
  fail_item_id       Int
  fail_item_count    Int
  limit_time         Int
  status             String @db.NVarChar(1)
}

model disease_data {
  disease_id      Int    @id(map: "PK__disease___15627065FCC33DD0")
  name            String @db.NVarChar(50)
  contain_disease Int
  end_rate        Int
  die_rate        Int
  attack_end_rate Int
  attack_die_rate Int
  skill_id        Int
  status          String @db.NVarChar(1)
}

model enumtype_data {
  enumtype_id Int    @id
  enumtype    String @db.NVarChar(255)
  id          Int
  s_type      String @db.NVarChar(255)
}

model equip_item_data {
  equip_item_id         Int    @id(map: "PK__equip_it__DA94CA187227F72B")
  equip_item_type       Int
  category              Int
  level                 Int
  limit_level           Int
  damage                Int
  defense               Int
  durability            Int
  group_id              Int
  option_gacha_group_id Int
  status                String @db.NVarChar(1)
}

model equip_option_data {
  equip_option_id Int    @id(map: "PK__equip_op__481FD6284838ED58")
  type            Int
  value           Int
  status          String @db.NVarChar(1)
}

model equip_reinforce_data {
  equip_reinforce_id Int    @id(map: "PK__equip_re__8ADAA19C1F1953DF")
  probability        Int
  weapon_damage      Int
  armor_defense      Int
  accessory_defense  Int
  need_parts_point   Int
  need_wood_point    Int
  low_probability    Int
  medium_probability Int
  high_probability   Int
  status             String @db.NVarChar(1)
}

model equip_set_data {
  equip_set_id Int      @id
  option_id_2  Int
  option_id_3  Int
  status       String   @db.NVarChar(1)
  reg_dt       DateTime
}

model equip_upgrade_data {
  equip_upgrade_id Int    @id(map: "PK__equip_up__EE989A99D27E7BA3")
  next_equip_id    Int
  mat1_item_id     Int
  mat1_count       Int
  mat2_item_id     Int
  mat2_count       Int
  mat3_item_id     Int
  mat3_count       Int
  mat4_item_id     Int
  mat4_count       Int
  status           String @db.NVarChar(1)
}

model exp_level_data {
  level Int @id(map: "PK__exp_leve__C03A140BE8508429")
  exp1  Int
  exp2  Int
  exp3  Int
  exp4  Int
  exp5  Int
  exp6  Int
  exp7  Int
  exp8  Int
  exp9  Int
  exp10 Int
}

model explore_pattern_data {
  explore_pattern_id Int    @id(map: "PK__explore___7C9AFDE01BF436FB")
  map_id             Int
  pattern_id         Int
  type               Int
  data_id            Int
  reward_group_id    Int
  req_item_id_1      Int
  req_item_count_1   Int
  req_item_id_2      Int
  req_item_count_2   Int
  status             String @db.NVarChar(1)
}

model explore_reward_data {
  explore_reward_id Int    @id(map: "PK__explore___981D1178860B7A60")
  group_id          Int
  product_type      Int
  product_id        Int
  count             Int
  probability       Int
  status            String @db.NVarChar(1)
}

model facility_setup_data {
  facility_id            Int    @id(map: "PK__facility__B2E8EAAE5A56892B")
  facility_level         Int
  next_facility_id       Int
  facility_type          Int
  facility_install_type  Int
  facility_setup_type    Int
  need_wood_point        Int
  need_parts_point       Int
  need_gasoline_point    Int
  need_food_point        Int
  quickdone_dia_point    Int
  cost_time              Int
  condition_hqlv         Int
  gain_exp               Int
  condition_buildingid01 Int
  condition_buildingid02 Int
  count                  Int
  status                 String @db.NVarChar(1)
}

model gacha_data {
  gacha_id     Int    @id(map: "PK__gacha_da__440191660EC8DDD3")
  type_id      Int
  product_type Int
  product_id   Int
  count        Int
  probability  Int
  status       String @db.NVarChar(1)
}

model grade_info_data {
  grade_info_data_id             Int      @id
  grade_name_actor               String   @db.NVarChar(50)
  grade_name_monster             String   @db.NVarChar(50)
  skill_count                    Int
  skill_value                    Int
  increase_multiplier_hp         Int
  increase_multiplier_mental     Int
  increase_multiplier_resistance Int
  increase_multiplier_str        Int
  increase_multiplier_dex        Int
  increase_multiplier_building   Int
  req_level                      Int
  req_disaster_clear_count       Int
  eff_res                        String   @db.NVarChar(50)
  status                         String   @db.NVarChar(1)
  reg_dt                         DateTime
}

model incident_data {
  incident_id           Int    @id(map: "PK__incident__E6C40DA397A93E36")
  type                  Int
  type_data_id          Int
  type_pattern_id       String @db.NVarChar(50)
  mission_type          Int
  chapter_id            Int
  incident_num          Int
  user_exp              Int
  survivor_exp          Int
  first_reward_group_id Int
  clear_reward_group_id Int
  status                String @db.NVarChar(1)
}

model item_data {
  item_id       Int    @id(map: "PK__item_dat__52020FDD855963A6")
  name          String @db.NVarChar(50)
  type          Int
  material_type Int
  grade         Int
  sellable      Int
  stack_count   Int    @default(1, map: "DF__item_data__stack__1B9317B3")
  status        String @db.NVarChar(1)
}

model level_need_item_data {
  level_need_item_id Int @id(map: "PK__level_ne__BC01E86DB66264B8")
  item_id_1          Int
  item_count_1       Int
  item_id_2          Int
  item_count_2       Int
  item_id_3          Int
  item_count_3       Int
  item_id_4          Int
  item_count_4       Int
}

model level_pattern_data {
  level_pattern_id Int @id(map: "PK__level_pa__976D365D00C79A40")
  group_id         Int @default(0, map: "DF__level_pat__group__1C873BEC")
  level            Int @default(0, map: "DF__level_pat__level__1D7B6025")
  hp               Int @default(0, map: "DF__level_patter__hp__1E6F845E")
  attack_damage    Int @default(0, map: "DF__level_pat__attac__1F63A897")
  defense          Int @default(0, map: "DF__level_pat__defen__2057CCD0")
  food_cost        Int @default(0, map: "DF__level_pat__food___214BF109")
}

model market_info {
  market_info_key BigInt   @id(map: "PK__tmp_ms_x__23424E13E4670948") @default(autoincrement())
  market_type     Int
  os_type         Int
  app_down_url    String   @db.NVarChar(255)
  reg_dt          DateTime
  status          String   @db.NVarChar(1)
}

model notice_info {
  notice_info_key BigInt   @id(map: "PK__tmp_ms_x__B883117DBC12E753") @default(autoincrement())
  notice_body     String   @db.NVarChar(255)
  notice_url      String   @default("", map: "DF__tmp_ms_xx__notic__06CD04F7") @db.NVarChar(255)
  reg_dt          DateTime @default(now(), map: "DF__tmp_ms_xx__reg_d__07C12930")
  status          String   @default("A", map: "DF__tmp_ms_xx__statu__08B54D69") @db.NVarChar(1)
}

model option_gacha_data {
  option_gacha_id Int    @id(map: "PK__option_g__1483F53EDB66338A")
  group_id        Int
  option_id       Int
  probability     Int
  status          String @db.NVarChar(1)
}

model pay_item_data {
  pay_item_id Int    @id(map: "PK__pay_item__46C804C1681054B3")
  type        Int
  type_value  Int
  status      String @db.NVarChar(1)
}

model quest_data {
  quest_id        Int    @id(map: "PK__quest_da__9A0F00CDB407D73C")
  todo_cnt        Int
  todo_id_1       Int
  todo_value_1    Int
  todo_id_2       Int
  todo_value_2    Int
  todo_id_3       Int
  todo_value_3    Int
  reward_group_id Int
  exp             Int
  status          String @db.NVarChar(1)
}

model quest_group_data {
  quest_group_id  Int    @id(map: "PK__quest_gr__3DE45DCC2BDD3349")
  title           String @db.NVarChar(50)
  repeat_group_id Int
  expire_time     Int
  next_group_id   Int
  quest_count     Int
  quest_id_1      Int
  quest_id_2      Int
  quest_id_3      Int
  quest_id_4      Int
  quest_id_5      Int
  quest_id_6      Int
  quest_id_7      Int
  quest_id_8      Int
  quest_id_9      Int
  quest_id_10     Int
  status          String @db.NVarChar(1)
}

model quest_open_data {
  quest_open_id  Int    @id(map: "PK__quest_op__614C64C495A4E898")
  open_type      Int
  open_lv        Int
  check_type     Int
  check_value    Int
  quest_group_id Int
  status         String @db.NVarChar(1)
}

model quest_reward_data {
  quest_reward_id Int    @id(map: "PK__quest_re__B5DE931C4ADCAA20")
  group_id        Int
  random_type     Int
  product_type    Int
  product_id      Int
  count           Int
  probability     Int
  status          String @db.NVarChar(1)
}

model quest_todo_data {
  quest_todo_id     Int     @id(map: "PK__quest_to__E2D38D85B0B229A6")
  name              String  @db.NVarChar(50)
  type              Int
  target_type       Int
  target_id         Int
  btn_type          Int
  goods_type        Int
  goods_count       Int?
  quick_path_type   Int?
  quick_path_target String? @db.NVarChar(20)
  status            String  @db.NVarChar(1)
}

model radio_quest_open_data {
  radio_quest_open_id Int    @id(map: "PK__radio_qu__EED07EF01F11AB15")
  radio_level         Int
  user_level          Int
  shelter_id          Int
  stage_id            Int
  quest_group_id      Int
  status              String @db.NVarChar(1)
}

model ranking_reward_data {
  ranking_reward_id Int    @id(map: "PK__ranking___3885B2F96824BBFE")
  name              String @db.NVarChar(50)
  group_id          Int
  start_ranking     Int
  end_ranking       Int
  reward_group_id   Int
  status            String @db.NVarChar(1)
}

model recipe_combine_data {
  recipe_combine_id Int    @id(map: "PK__recipe_c__F5E69E5F84AF9126")
  device_level      Int
  result_item_id    Int
  mat1_item_id      Int
  mat1_count        Int
  mat2_item_id      Int
  mat2_count        Int
  mat3_item_id      Int
  mat3_count        Int
  mat4_item_id      Int
  mat4_count        Int
  time              Int
  status            String @db.NVarChar(1)
}

model recipe_data {
  recipe_id         Int    @id(map: "PK__recipe_d__3571ED9BC72EA50D")
  device_type       Int
  device_level      Int
  result_item_id    Int
  result_item_grade Int
  mat1_item_id      Int
  mat1_count        Int
  mat2_item_id      Int
  mat2_count        Int
  mat3_item_id      Int
  mat3_count        Int
  mat4_item_id      Int
  mat4_count        Int
  recipe_item_id    Int
  time              Int
  exp               Int
  cond              Int
  status            String @db.NVarChar(1)
}

model recipe_refine_data {
  recipe_refine_id Int    @id(map: "PK__recipe_r__67F36FBDE2BA84D7")
  device_level     Int
  result_item_id   Int
  mat_parts_point  Int
  mat_food_point   Int
  mat_wood_point   Int
  time             Int
  status           String @db.NVarChar(1)
}

model recipe_smelt_data {
  recipe_smelt_id  Int    @id(map: "PK__recipe_s__182980FA1A69C878")
  device_level     Int
  type1_id         Int
  probability_1    Int
  type2_id         Int
  probability_2    Int
  type3_id         Int
  probability_3    Int
  mat1_item_id     Int
  mat1_count       Int
  mat2_item_id     Int
  mat2_count       Int
  mat3_item_id     Int
  mat3_count       Int
  mat4_item_id     Int
  mat4_count       Int
  need_cash        Int
  need_parts_point Int
  need_wood_point  Int
  status           String @db.NVarChar(1)
}

model recipe_training_data {
  recipe_training_id Int    @id(map: "PK__recipe_t__4F7C8C062E671A81")
  device_level       Int
  name               String @db.NVarChar(50)
  tab_menu           Int
  training_type      Int
  training_level     Int
  mat_parts_point    Int
  mat_wood_point     Int
  mat_food_point     Int
  time               Int
  skill_id           Int
  use_cost           Int
  status             String @db.NVarChar(1)
}

model reward_data {
  reward_id    Int    @id(map: "PK__reward_d__3DD599BCC34942ED")
  group_id     Int
  random_type  Int
  product_type Int
  product_id   Int
  count        Int
  probability  Int
  status       String @db.NVarChar(1)
}

model room_data {
  facility_id     Int    @id(map: "PK__room_dat__B2E8EAAE76454F65")
  level           Int
  facility_type   Int
  production_time Int
  goods_type      Int
  goods_count     Int
  goods_max_count Int
  status          String @db.NVarChar(1)
}

model safetybox_bundle_data {
  safetybox_bundle_id            Int @id(map: "PK__safetybo__351784A068C01B69")
  group_id                       Int @default(0, map: "DF__safetybox__group__22401542")
  safetybox_reward_data_group_id Int @default(0, map: "DF__safetybox__safet__2334397B")
  dice_count                     Int @default(0, map: "DF__safetybox__dice___24285DB4")
  reward_show                    Int @default(0, map: "DF__safetybox__rewar__251C81ED")
}

model safetybox_item_data {
  safetybox_item_id              Int @id(map: "PK__safetybo__AFA4C55B693A2EFC")
  unlock_time                    Int @default(0, map: "DF__safetybox__unloc__2610A626")
  masterkey_item_data_id         Int @default(0, map: "DF__safetybox__maste__2704CA5F")
  masterkey_count                Int @default(0, map: "DF__safetybox__maste__27F8EE98")
  safetybox_bundle_data_group_id Int @default(0, map: "DF__safetybox__safet__28ED12D1")
}

model safetybox_reward_data {
  safetybox_reward_id Int @id(map: "PK__safetybo__7C097F2AC8C6C2B6")
  group_id            Int @default(0, map: "DF__safetybox__group__29E1370A")
  sub_group           Int @default(0, map: "DF__safetybox__sub_g__2AD55B43")
  product_type        Int @default(0, map: "DF__safetybox__produ__2BC97F7C")
  product_id          Int @default(0, map: "DF__safetybox__produ__2CBDA3B5")
  count               Int @default(0, map: "DF__safetybox__count__2DB1C7EE")
  reward_prob         Int @default(0, map: "DF__safetybox__rewar__2EA5EC27")
}

model server_info {
  server_info_key  BigInt   @id(map: "PK__tmp_ms_x__F3BCBBF80246EDDD") @default(autoincrement())
  is_maintenance   Int      @default(0, map: "DF__tmp_ms_xx__is_ma__0B91BA14")
  maintenance_body String   @default("", map: "DF__tmp_ms_xx__maint__0C85DE4D") @db.NVarChar(255)
  maintenance_url  String   @default("", map: "DF__tmp_ms_xx__maint__0D7A0286") @db.NVarChar(255)
  server_type      Int
  game_server_ip   String   @db.NVarChar(255)
  game_server_port Int
  chat_server_ip   String   @db.NVarChar(255)
  chat_server_port Int
  reg_dt           DateTime @default(now(), map: "DF__tmp_ms_xx__reg_d__0E6E26BF")
  status           String   @db.NVarChar(1)
}

model shelter_area_data {
  shelter_area_id Int    @id(map: "PK__shelter___01C3F9AC2402B39B")
  shelter_id      Int
  move_index      Int
  status          String @db.NVarChar(1)
}

model shelter_data {
  shelter_id                Int    @id(map: "PK__shelter___8E649062862F4CEA")
  name                      String @db.NVarChar(50)
  zone_id                   Int
  need_level                Int
  next_shelter_id           Int
  setup_time                Int
  attack_time               Int
  attack_object_parts_point Int
  attack_time_parts_point   Int
  attack_actor_food_point   Int
  attack_time_food_point    Int
  attack_win_medal_point    Int
  attack_lose_medal_point   Int
  max_defense_actor         Int
  status                    String @db.NVarChar(1)
}

model shelter_extend_data {
  shelter_extend_id Int    @id(map: "PK__shelter___F9515298D6C66074")
  shelter_id        Int
  shelter_level     Int
  max_actor_cnt     Int
  max_inventory_cnt Int
  extend_time       Int
  need_parts_point  Int
  need_food_point   Int
  need_wood_point   Int
  status            String @db.NVarChar(1)
}

model shelter_level_data {
  shelter_level_id Int    @id(map: "PK__shelter___D30AC82D1F778088")
  shelter_id       Int
  device_id        Int
  unlock_level     Int
  move_index       Int
  target_level_id  Int
  status           String @db.NVarChar(1)
}

model shop_manage_data {
  shop_manage_id      Int       @id(map: "PK__tmp_ms_x__3CBFFD07379097D5") @default(autoincrement())
  shop_merchandise_id Int       @unique(map: "UQ__tmp_ms_x__9EEF116B545BE5A1")
  max_buy_count       Int       @default(0, map: "DF__tmp_ms_xx__max_b__123EB7A3")
  min_user_level      Int       @default(0, map: "DF__tmp_ms_xx__min_u__1332DBDC")
  max_user_level      Int       @default(0, map: "DF__tmp_ms_xx__max_u__14270015")
  start_date          DateTime?
  end_date            DateTime?
  status              String    @default("A", map: "DF__tmp_ms_xx__statu__151B244E") @db.NVarChar(1)
  bonus_count         Int       @default(0, map: "DF__tmp_ms_xx__bonus__160F4887")
  is_new              Int       @default(0, map: "DF__tmp_ms_xx__is_ne__17036CC0")
  period_limit_type   Int       @default(0, map: "DF__tmp_ms_xx__perio__17F790F9")
}

model shop_merchandise_data {
  shop_merchandise_id       Int    @id(map: "PK__shop_mer__9EEF116A5D87F607")
  shop_type                 Int
  cash_shop_category        Int
  shop_merchandise_priority Int
  shop_goods_type           Int
  shop_goods_price          Int
  product_group_id          Int
  mileage                   Int
  max_buy_count             Int
  status                    String @db.NVarChar(1)
}

model shop_product_data {
  shop_product_id  Int    @id(map: "PK__shop_pro__86E1CC4956E228BB")
  product_group_id Int
  product_type     Int
  product_id       Int
  count            Int
  status           String @db.NVarChar(1)
}

model skill_data {
  skill_id        Int    @id(map: "PK__skill_da__FBBA837919630681")
  name            String @db.NVarChar(50)
  targeting_count Int
  add1_id         Int
  linked_add_1_id Int
  add1_val1       Int
  add1_val2       Int
  add1_val3       Int
  add2_id         Int
  linked_add_2_id Int
  add2_val1       Int
  add2_val2       Int
  add2_val3       Int
  status          String @db.NVarChar(1)
}

model skill_grade_data {
  skill_grade_id Int    @id(map: "PK__skill_gr__3142C55D5FD01E9D")
  skill_id       Int
  group_id       Int
  level          Int
  actor_level    Int
  mat1_item_id   Int
  mat1_count     Int
  mat2_item_id   Int
  mat2_count     Int
  mat3_item_id   Int
  mat3_count     Int
  mat4_item_id   Int
  mat4_count     Int
  status         String @db.NVarChar(1)
}

model stage_data {
  stage_id                      Int       @id(map: "PK__stage_da__CFC78760D39FCFB0")
  name                          String    @db.NVarChar(50)
  zone_id                       Int
  start_dt                      DateTime?
  end_dt                        DateTime?
  day_of_week                   Int
  part_time_start               Int
  part_time_end                 Int
  need_gasoline_point           Int
  limit_time                    Int
  exp                           Int
  wave_map_1                    Int
  wave_map_2                    Int
  wave_map_3                    Int
  wave_map_4                    Int
  clear_object_id               Int
  clear_object_cnt              Int
  clear_explore_reward_group_id Int
  bonus_explore_reward_group_id Int
  limit_success                 Int
  status                        String    @db.NVarChar(1)
}

model storage_data {
  storage_data_id   Int      @id
  disaster_resource Int
  status            String   @db.NVarChar(1)
  reg_dt            DateTime
}

model subscribe_merchandise_data {
  subscribe_merchandise_id   Int    @id(map: "PK__subscrib__1E9DB31ADCF6252C")
  subscribe_day              Int
  subscribe_goods_type       Int
  subscribe_goods_price      Int
  product_type               Int
  product_id                 Int
  count                      Int
  subscribe_product_group_id Int
  mileage                    Int
  status                     String @db.NVarChar(1)
}

model subscribe_product_data {
  subscribe_product_id       Int    @id(map: "PK__subscrib__B70B9387C736C14C")
  subscribe_product_group_id Int
  day                        Int
  product_group_id           Int
  status                     String @db.NVarChar(1)
}

model survey_data {
  survey_id              Int       @id(map: "PK__survey_d__9DC31A0745939A74")
  name                   String    @db.NVarChar(50)
  survey_type            Int
  need_shelter_id        Int
  start_date             DateTime?
  end_date               DateTime?
  time_1                 Int
  time_2                 Int
  time_3                 Int
  duration               Int
  check_battle_power     Int
  add_risk_point         Int
  survey_time_1          Int
  survey_reward_1_cnt    Int
  survey_time_2          Int
  survey_reward_2_cnt    Int
  survey_time_3          Int
  survey_reward_3_cnt    Int
  survey_reward_group_id Int
  add_gasoline_point     Int
  status                 String    @db.NVarChar(1)
}

model survey_gacha_data {
  survey_gacha_id Int    @id(map: "PK__survey_g__43DEB2F609444AE4")
  type_id         Int
  stage_id        Int
  duration        Int
  probability     Int
  status          String @db.NVarChar(1)
}

model survey_reward_data {
  survey_reward_id Int    @id(map: "PK__survey_r__0150578686CF1C0A")
  group_id         Int
  random_type      Int
  product_type     Int
  product_id       Int
  count            Int
  probability      Int
  status           String @db.NVarChar(1)
}

model survival_diary_data {
  survival_diary_id Int    @id(map: "PK__survival__629F9C1CD293A8A0")
  diary_type        Int
  diary_category    Int
  target_id         Int
  status            String @db.NVarChar(1)
}

model survivor_piece_item_data {
  survivor_piece_item_id Int @id(map: "PK__survivor__29B6F452CEA9DFF6")
  item_data_id           Int
  actor_data_id          Int
}

model tutorial_data {
  tutorial_id Int @id(map: "PK__tutorial__8D46C526DEF16044")
  group_id    Int
  end_id      Int
}

model use_item_data {
  use_item_id   Int    @id(map: "PK__use_item__85CAE01768EA389F")
  use_item_type Int
  disease_id    Int
  status        String @db.NVarChar(1)
}

model user_data {
  user_key     BigInt    @id(map: "PK__tmp_ms_x__E1CC8CC0B5CBAA3E") @default(autoincrement())
  uuid         String?   @unique(map: "UQ__tmp_ms_x__7F42793132519836") @db.NVarChar(50)
  google_id    String?   @db.NVarChar(50)
  facebook_id  String?   @db.NVarChar(50)
  ios_id       String?   @db.NVarChar(50)
  shard_db     Int       @default(0, map: "DF__tmp_ms_xx__shard__1CBC4616")
  reg_dt       DateTime
  status       String    @db.NVarChar(1)
  del_dt       DateTime?
  block_end_dt DateTime?
  nick_name    String?   @unique(map: "UQ__tmp_ms_x__08E8937AA212E9B5") @db.NVarChar(50)
}

model user_level_data {
  user_level_id            Int @id(map: "PK__user_lev__E5D5B1BD2DD3C76D")
  exp_for_next             Int
  explorepoint_max         Int
  explorepoint_reward      Int
  actor_hp_recovery        Int
  actor_stress_recovery    Int
  risk_point_max           Int
  defense_pattern_group_id Int
  reward_group_id          Int
}

model version_check_info {
  version_check_info_key BigInt   @id(map: "PK__tmp_ms_x__1FC487EDD529C614") @default(autoincrement())
  market_type            Int
  client_ver             String   @db.NVarChar(20)
  is_update_require      Int      @default(0, map: "DF__tmp_ms_xx__is_up__1F98B2C1")
  server_type            Int
  res_ver                String   @db.NVarChar(20)
  res_url                String   @db.NVarChar(255)
  apply_dt               DateTime
  reg_dt                 DateTime
  status                 String   @db.NVarChar(1)
}

model world_data {
  world_id   Int    @id(map: "PK__world_da__A13EA50E4D535342")
  name       String @db.NVarChar(50)
  world_type Int
  status     String @db.NVarChar(1)
}

model zone_data {
  zone_id   Int    @id(map: "PK__zone_dat__80B401DF2C87C9A0")
  name      String @db.NVarChar(50)
  world_id  Int
  zone_type Int
  status    String @db.NVarChar(1)
}
